-- Sql de yorum satýrý 2 -- ile açýlýr-- Sql komutlarý çalýþtýrmak için ssms üst menüsündeki New Query menüsüne týklýyoruz-- Yazdýðýmýz sql komutlarýný üst menüdeki kaydet ikonuna týklayarak veya ctrl + s ile bilgisayarýmýza . sql uzantýsýyla kaydedip daha sonra çift týklayarak ssms programýyla bu dosyalarý açabiliriz.-- Ssms ile yeni veritabaný oluþturma/*	Çoklu yorum satýrý	Databases klasörüne sað týklayýp New Database diyerek açýlan pencerede veritabanýna bir isim verip ok diyerek pencereyi kapatýyoruz.*/-- Ssms ile Veritabanýna tablo ekleme/*	Veritabanýný + ya basarak geniþletip açýlan klasörlerden Tables e sað týklayýp New > Table yolunu izleyip Design modunda tablo oluþturma ekranýný açýyoruz.	Açýlan ekranda Kolon adý, bu kolona eklenecek verilerin tipi ve boþ geçilip geçilemeyeceðini her satýr için ayarlýyoruz.	Tablo kolonlarýný ayarladýktan sonra üst menüden kaydet ikonuna veya ctrl + s ye basarak bu tabloya bir isim verip kaydediyoruz.	Kaydettiðimiz tabloyu görmek için sol taraftaki menüden veritabanýmýzý ve içindeki tables i + ya basarak açýp tables e sað týklayýp refresh menüsüne týklamamýz gerekir.*/-- Not: Sql server ý ilk kurduðumuzda tabloyu kaydettikten sonra deðiþikliðe izin vermezse ssms den Tools > Options > Designers menüsünü açýp saðdaki seçeneklerden prevent saving.. ile baþlayan iþareti kaldýrýyoruz.-- Oluþturduðumuz Tablolara Veri Giriþi Yapmak Ýçin-- Ýlgili tabloya sað týklayýp açýlan menüden Edit Top 200 Rows a basýyoruz.-- Daha önceden oluþturduðumuz bir tabloyu deðiþtirmek için Tabloya sað týklayýp açýlan menüden Design menüsüne týklýyoruz. Açýlan tabloda deðiþikikleri yapýp kaydet diyerek iþlemi tamamlýyoruz.--PRIMARY KEY : Tablodaki-- Sql de yorum satýrý 2 -- ile açýlýr-- Sql komutlarý çalýþtýrmak için ssms üst menüsündeki New Query menüsüne týklýyoruz-- Yazdýðýmýz sql komutlarýný üst menüdeki kaydet ikonuna týklayarak veya ctrl + s ile bilgisayarýmýza . sql uzantýsýyla kaydedip daha sonra çift týklayarak ssms programýyla bu dosyalarý açabiliriz.-- Ssms ile yeni veritabaný oluþturma/*	Çoklu yorum satýrý	Databases klasörüne sað týklayýp New Database diyerek açýlan pencerede veritabanýna bir isim verip ok diyerek pencereyi kapatýyoruz.*/-- Ssms ile Veritabanýna tablo ekleme/*	Veritabanýný + ya basarak geniþletip açýlan klasörlerden Tables e sað týklayýp New > Table yolunu izleyip Design modunda tablo oluþturma ekranýný açýyoruz.	Açýlan ekranda Kolon adý, bu kolona eklenecek verilerin tipi ve boþ geçilip geçilemeyeceðini her satýr için ayarlýyoruz.	Tablo kolonlarýný ayarladýktan sonra üst menüden kaydet ikonuna veya ctrl + s ye basarak bu tabloya bir isim verip kaydediyoruz.	Kaydettiðimiz tabloyu görmek için sol taraftaki menüden veritabanýmýzý ve içindeki tables i + ya basarak açýp tables e sað týklayýp refresh menüsüne týklamamýz gerekir.*/-- Not: Sql server ý ilk kurduðumuzda tabloyu kaydettikten sonra deðiþikliðe izin vermezse ssms den Tools > Options > Designers menüsünü açýp saðdaki seçeneklerden prevent saving.. ile baþlayan iþareti kaldýrýyoruz.-- Oluþturduðumuz Tablolara Veri Giriþi Yapmak Ýçin-- Ýlgili tabloya sað týklayýp açýlan menüden Edit Top 200 Rows a basýyoruz.-- Daha önceden oluþturduðumuz bir tabloyu deðiþtirmek için Tabloya sað týklayýp açýlan menüden Design menüsüne týklýyoruz. Açýlan tabloda deðiþikikleri yapýp kaydet diyerek iþlemi tamamlýyoruz.--PRIMARY KEY : Tablodaki her bir satýrýn tekil olmasýný saðlar. Genelde ID deðerini primary key yaparýz ve otomatik artan sayý yaparýz.-- ID yi otomatik artan sayý yapmak için ;--Tablo desing modundayken column properties alanýndan veya ekrandaki boþ bir alana sað týklayýp properties diyerek açýlan pencereden Identity Column kutucuna ID kolonunu seçiyoruz.--FOREING KEY : ikincil anahtar veya yabancý anahtar denir ve 2 tablo arasýnda baðlantý kurmak için kullanýlýr.-- Örneðin ürünler tablosunda her bir ürün için kategori bilgisi tutmak istediðimizde foreign key kullanýrsak urunlere'e kategori eklerken SQL server kategoriler tablosunu kontrol eder ve olmayan bir kategorinin eklenmesini engeller.Böylece veri bütünlüðü saðlanýr.--FOREIGN KEY EKLEME : -- 2 tabloyu birbirine baðlamak için öncelikle ortak kolon tanýmlamasý yapýyoruz.--Örneðin urunler tablosuna KategoriID isminde int ttipinde bir kolon ekliyoruz. --Sol menüdeki keys klasörüne sað týklayýp açýlan menüden new foreign key diyerek ilgili pencereyi açýyoruz.--2. Yöntem de ilgili tabloda boþ alana sað týklayýp Relationship menüsünden de açabiliriz.-- Açýlan pencerede Name alanýndan bir isim veriyoruz. ve tables and cloumn specification dan noktaya basarak açýlan pencereden PrimaryKey table dan birincil kolonun olduðu tabloyu yani kategorileri ve Id deðerini seçiyoruz.-- Saðdaki alandan da 2. Tablodaki bu kolona karþýlýk verinini tutulacaðý alaný yani ürünler tablosundaki kategoriID seçip pencereli kapatýp save butonuna basrak iþlemi tmamlýyoruz